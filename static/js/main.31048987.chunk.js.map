{"version":3,"sources":["download.jpg","components/List.js","components/withListLoading.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","catgs","length","className","map","catg","WithListLoading","Component","isLoading","style","textAlign","fontSize","App","ListLoading","withListLoading","useState","loading","appState","setAppState","useEffect","axios","get","then","allCatgs","data","src","Chuck","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uNAAe,G,MAAA,IAA0B,sC,iBC4B1BA,EAvBF,SAACC,GAAW,IACfC,EAAUD,EAAVC,MACR,OAAKA,GAA0B,IAAjBA,EAAMC,OAEhB,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,kCACA,8BACA,6BAEMF,EAAMG,KAAI,SAACC,GACZ,OAEA,oBAAeF,UAAU,OAAzB,SACA,yBAAQA,UAAU,MAAlB,UAAyBE,EAAzB,QADSA,aAVqB,sD,gBCK5BC,MAVf,SAAyBC,GACvB,OAAO,YAAuD,IAAxBC,EAAuB,EAAvBA,UAAcR,EAAS,6BAC3D,OAAKQ,EAEH,mBAAGC,MAAO,CAAEC,UAAW,SAAUC,SAAU,QAA3C,0DAFqB,cAACJ,EAAD,eAAeP,MC6C3BY,MAxCf,WAEE,IAAMC,EAAcC,EAAgBf,GAFvB,EAGmBgB,mBAAS,CACvCC,SAAS,EACTf,MAAO,OALI,mBAGNgB,EAHM,KAGIC,EAHJ,KAiBb,OATFC,qBAAU,WACRD,EAAY,CAAEF,SAAS,IAEvBI,IAAMC,IADS,+CACGC,MAAK,SAACrB,GACtB,IAAMsB,EAAWtB,EAAMuB,KACvBN,EAAY,CAAEF,SAAS,EAAOf,MAAOsB,SAEtC,CAACL,IAGA,qBAAKf,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,QAAd,gCACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UACf,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAACU,EAAD,CAAaL,UAAWS,EAASD,QAASf,MAAOgB,EAAShB,UAG5D,qBAAKE,UAAU,aAAf,SACE,qBAAKsB,IAAMC,EAAOC,IAAI,8BC1BnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAET,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjCX,M","file":"static/js/main.31048987.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/download.254a876c.jpg\";","import React from 'react';\r\n\r\nconst handleClick = value => () => console.log(value)\r\n\r\n\r\nconst List = (props) => {\r\n  const { catgs } = props;\r\n  if (!catgs || catgs.length === 0) return <p>No categories, sorry</p>;\r\n  return (\r\n      <div className=\"categories \">\r\n        <h2 className=' subTitle'>Available Categories</h2>\r\n        <cat>\r\n        <ul>\r\n            \r\n             {catgs.map((catg) => {\r\n             return (\r\n            \r\n             <li key={catg} className='list'>\r\n             <button className='btn'>{catg} </button>\r\n              </li>\r\n         \r\n         );\r\n         })}\r\n        </ul>\r\n        </cat>\r\n    </div>\r\n  );\r\n};\r\nexport default List;","import React from 'react';\r\n\r\nfunction WithListLoading(Component) {\r\n  return function WihLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\r\n        Hold on, fetching data may take some time :)\r\n      </p>\r\n    );\r\n  };\r\n}\r\nexport default WithListLoading;","\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Chuck from './download.jpg';\nimport axios from 'axios';\nimport List from './components/List';\nimport withListLoading from './components/withListLoading';\n\n\nfunction App() {\n\n  const ListLoading = withListLoading(List);\n  const [appState, setAppState] = useState({\n    loading: false,\n    catgs: null,\n  });\n\nuseEffect(() => {\n  setAppState({ loading: true });\n  const apiUrl = 'https://api.chucknorris.io/jokes/categories';\n  axios.get(apiUrl).then((catgs) => {\n    const allCatgs = catgs.data;\n    setAppState({ loading: false, catgs: allCatgs });\n  });\n}, [setAppState]);\n\n  return (\n    <div className='App'>\n      <div className='container'>\n      <h1 className=\"title\">Chuck Norris Jokes</h1>\n      <div className=\"row\">\n        <div className=\"col-2\"></div>\n        <div className=\"col-8 card-group\">\n          <div className=\"card \">\n            <ListLoading isLoading={appState.loading} catgs={appState.catgs} />\n          \n          </div>\n          <div className=\"image card\">\n            <img src ={Chuck} alt=\"Chuck Noris\" />\n          </div>\n        </div>\n        \n       </div>\n       \n      </div>\n      \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}